{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"UserDisplay\",\n  dicts: ['sys_normal_disable', 'sys_user_sex'],\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 用户表格数据\n      userList: null,\n      // 弹出层标题\n      title: \"\",\n      // 部门树选项\n      deptOptions: undefined,\n      // 是否显示弹出层\n      open: false,\n      // 部门名称\n      deptName: undefined,\n      // 默认密码\n      initPassword: undefined,\n      // 日期范围\n      dateRange: [],\n      // 岗位选项\n      postOptions: [],\n      // 角色选项\n      roleOptions: [],\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: \"children\",\n        label: \"label\"\n      },\n      // 用户导入参数\n      upload: {\n        // // 是否显示弹出层（用户导入）\n        // open: false,\n        // // 弹出层标题（用户导入）\n        // title: \"\",\n        // // 是否禁用上传\n        // isUploading: false,\n        // // 是否更新已经存在的用户数据\n        // updateSupport: 0,\n        // // 设置上传的请求头部\n        // headers: { Authorization: \"Bearer \" + getToken() },\n        // // 上传的地址\n        // url: process.env.VUE_APP_BASE_API + \"/system/user/importData\"\n      },\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        userName: undefined,\n        phonenumber: undefined,\n        status: undefined,\n        deptId: undefined\n      },\n      // 列信息\n      columns: [{\n        key: 0,\n        label: `用户id`,\n        visible: true\n      }, {\n        key: 1,\n        label: `用户账号`,\n        visible: true\n      }, {\n        key: 2,\n        label: `用户名`,\n        visible: true\n      }],\n      // 表单校验\n      rules: {\n        // userName: [\n        //   { required: true, message: \"用户名称不能为空\", trigger: \"blur\" },\n        //   { min: 2, max: 20, message: '用户名称长度必须介于 2 和 20 之间', trigger: 'blur' }\n        // ],\n        // nickName: [\n        //   { required: true, message: \"用户昵称不能为空\", trigger: \"blur\" }\n        // ],\n        // password: [\n        //   { required: true, message: \"用户密码不能为空\", trigger: \"blur\" },\n        //   { min: 5, max: 20, message: '用户密码长度必须介于 5 和 20 之间', trigger: 'blur' }\n        // ],\n        // email: [\n        //   {\n        //     type: \"email\",\n        //     message: \"请输入正确的邮箱地址\",\n        //     trigger: [\"blur\", \"change\"]\n        //   }\n        // ],\n        // phonenumber: [\n        //   {\n        //     pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n        //     message: \"请输入正确的手机号码\",\n        //     trigger: \"blur\"\n        //   }\n        // ]\n      }\n    };\n  },\n  watch: {\n    // 根据名称筛选部门树\n    deptName(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  created() {\n    this.getList();\n    this.getDeptTree();\n    this.getConfigKey(\"sys.user.initPassword\").then(response => {\n      this.initPassword = response.msg;\n    });\n  },\n  methods: {\n    /** 查询用户列表 */\n    getList() {\n      this.loading = true;\n      listUser(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\n        this.userList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    /** 查询部门下拉树结构 */\n    getDeptTree() {\n      deptTreeSelect().then(response => {\n        this.deptOptions = response.data;\n      });\n    },\n    // 筛选节点\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    },\n    // 节点单击事件\n    handleNodeClick(data) {\n      this.queryParams.deptId = data.id;\n      this.handleQuery();\n    },\n    // 用户状态修改\n    handleStatusChange(row) {\n      let text = row.status === \"0\" ? \"启用\" : \"停用\";\n      this.$modal.confirm('确认要\"' + text + '\"\"' + row.userName + '\"用户吗？').then(function () {\n        return changeUserStatus(row.userId, row.status);\n      }).then(() => {\n        this.$modal.msgSuccess(text + \"成功\");\n      }).catch(function () {\n        row.status = row.status === \"0\" ? \"1\" : \"0\";\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        userId: undefined,\n        deptId: undefined,\n        userName: undefined,\n        nickName: undefined,\n        password: undefined,\n        phonenumber: undefined,\n        email: undefined,\n        sex: undefined,\n        status: \"0\",\n        remark: undefined,\n        postIds: [],\n        roleIds: []\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = [];\n      this.resetForm(\"queryForm\");\n      this.queryParams.deptId = undefined;\n      this.$refs.tree.setCurrentKey(null);\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.userId);\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n    // 更多操作触发\n    handleCommand(command, row) {\n      switch (command) {\n        case \"handleResetPwd\":\n          this.handleResetPwd(row);\n          break;\n        case \"handleAuthRole\":\n          this.handleAuthRole(row);\n          break;\n        default:\n          break;\n      }\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      getUser().then(response => {\n        this.postOptions = response.posts;\n        this.roleOptions = response.roles;\n        this.open = true;\n        this.title = \"添加用户\";\n        this.form.password = this.initPassword;\n      });\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const userId = row.userId || this.ids;\n      getUser(userId).then(response => {\n        this.form = response.data;\n        this.postOptions = response.posts;\n        this.roleOptions = response.roles;\n        this.$set(this.form, \"postIds\", response.postIds);\n        this.$set(this.form, \"roleIds\", response.roleIds);\n        this.open = true;\n        this.title = \"修改用户\";\n        this.form.password = \"\";\n      });\n    },\n    /** 重置密码按钮操作 */\n    handleResetPwd(row) {\n      this.$prompt('请输入\"' + row.userName + '\"的新密码', \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        closeOnClickModal: false,\n        inputPattern: /^.{5,20}$/,\n        inputErrorMessage: \"用户密码长度必须介于 5 和 20 之间\"\n      }).then(({\n        value\n      }) => {\n        resetUserPwd(row.userId, value).then(response => {\n          this.$modal.msgSuccess(\"修改成功，新密码是：\" + value);\n        });\n      }).catch(() => {});\n    },\n    /** 分配角色操作 */\n    handleAuthRole: function (row) {\n      const userId = row.userId;\n      this.$router.push(\"/system/user-auth/role/\" + userId);\n    },\n    /** 提交按钮 */\n    submitForm: function () {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.userId != undefined) {\n            updateUser(this.form).then(response => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            addUser(this.form).then(response => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const userIds = row.userId || this.ids;\n      this.$modal.confirm('是否确认删除用户编号为\"' + userIds + '\"的数据项？').then(function () {\n        return delUser(userIds);\n      }).then(() => {\n        this.getList();\n        this.$modal.msgSuccess(\"删除成功\");\n      }).catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      this.download('system/user/export', {\n        ...this.queryParams\n      }, `user_${new Date().getTime()}.xlsx`);\n    },\n    /** 导入按钮操作 */\n    handleImport() {\n      this.upload.title = \"用户导入\";\n      this.upload.open = true;\n    },\n    /** 下载模板操作 */\n    importTemplate() {\n      this.download('system/user/importTemplate', {}, `user_template_${new Date().getTime()}.xlsx`);\n    },\n    // 文件上传中处理\n    handleFileUploadProgress(event, file, fileList) {\n      this.upload.isUploading = true;\n    },\n    // 文件上传成功处理\n    handleFileSuccess(response, file, fileList) {\n      this.upload.open = false;\n      this.upload.isUploading = false;\n      this.$refs.upload.clearFiles();\n      this.$alert(\"<div style='overflow: auto;overflow-x: hidden;max-height: 70vh;padding: 10px 20px 0;'>\" + response.msg + \"</div>\", \"导入结果\", {\n        dangerouslyUseHTMLString: true\n      });\n      this.getList();\n    },\n    // 提交上传文件\n    submitFileForm() {\n      this.$refs.upload.submit();\n    }\n  }\n};","map":{"version":3,"mappings":";AA2QA;EACAA;EACAC;EACAC;IACA;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACAC;QACAC;QACAC;MACA;MACA;MACAC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA,CACA;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACA;MACAC,UACA;QAAAC;QAAAV;QAAAW;MAAA,GACA;QAAAD;QAAAV;QAAAW;MAAA,GACA;QAAAD;QAAAV;QAAAW;MAAA,EACA;MACA;MACAC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA;IAEA;EACA;EACAC;IACA;IACArB;MACA;IACA;EACA;EACAsB;IACA;IACA;IACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MACA;MACAC;QACA;QACA;QACA;MACA,EACA;IACA;IACA;IACAC;MACAC;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;QACA;MACA;QACA;MACA;QACAC;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;QACAC;QACAlB;QACAH;QACAsB;QACAC;QACAtB;QACAuB;QACAC;QACAvB;QACAwB;QACAC;QACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;MAAA;IAEA;IACA;IACAC;MACA;MACAC;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACAD;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACA;IACAE;MACA;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;QAAAC;MAAA;QACAC;UACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;QACA;UACA;YACAC;cACA;cACA;cACA;YACA;UACA;YACAC;cACA;cACA;cACA;YACA;UACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;QACA;MACA;QACA;QACA;MACA;IACA;IACA;IACAC;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA,6CACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;QAAAC;MAAA;MACA;IACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","dicts","data","loading","ids","single","multiple","showSearch","total","userList","title","deptOptions","open","deptName","initPassword","dateRange","postOptions","roleOptions","form","defaultProps","children","label","upload","queryParams","pageNum","pageSize","userName","phonenumber","status","deptId","columns","key","visible","rules","watch","created","methods","getList","listUser","getDeptTree","deptTreeSelect","filterNode","handleNodeClick","handleStatusChange","row","cancel","reset","userId","nickName","password","email","sex","remark","postIds","roleIds","handleQuery","resetQuery","handleSelectionChange","handleCommand","handleAdd","getUser","handleUpdate","handleResetPwd","confirmButtonText","cancelButtonText","closeOnClickModal","inputPattern","inputErrorMessage","value","resetUserPwd","handleAuthRole","submitForm","updateUser","addUser","handleDelete","handleExport","handleImport","importTemplate","handleFileUploadProgress","handleFileSuccess","dangerouslyUseHTMLString","submitFileForm"],"sourceRoot":"src/components/user","sources":["UserDisplay.vue"],"sourcesContent":["<template>\r\n    <div class=\"app-container\">\r\n        <el-row :gutter=\"20\">\r\n            <!--用户数据-->\r\n            <el-col :span=\"20\" :xs=\"24\">\r\n                \r\n                <el-row :gutter=\"10\" class=\"mb8\">\r\n                <el-col :span=\"1.5\">\r\n                    <el-button\r\n                    type=\"primary\"\r\n                    plain\r\n                    icon=\"el-icon-plus\"\r\n                    size=\"mini\"\r\n                    @click=\"handleAdd\"\r\n                    v-hasPermi=\"['system:user:add']\"\r\n                    >新增</el-button>\r\n                </el-col>\r\n                <el-col :span=\"1.5\">\r\n                    <el-button\r\n                    type=\"success\"\r\n                    plain\r\n                    icon=\"el-icon-edit\"\r\n                    size=\"mini\"\r\n                    :disabled=\"single\"\r\n                    @click=\"handleUpdate\"\r\n                    v-hasPermi=\"['system:user:edit']\"\r\n                    >修改</el-button>\r\n                </el-col>\r\n                <el-col :span=\"1.5\">\r\n                    <el-button\r\n                    type=\"danger\"\r\n                    plain\r\n                    icon=\"el-icon-delete\"\r\n                    size=\"mini\"\r\n                    :disabled=\"multiple\"\r\n                    @click=\"handleDelete\"\r\n                    v-hasPermi=\"['system:user:remove']\"\r\n                    >删除</el-button>\r\n                </el-col>\r\n                <el-col :span=\"1.5\">\r\n                    <el-button\r\n                    type=\"info\"\r\n                    plain\r\n                    icon=\"el-icon-upload2\"\r\n                    size=\"mini\"\r\n                    @click=\"handleImport\"\r\n                    v-hasPermi=\"['system:user:import']\"\r\n                    >导入</el-button>\r\n                </el-col>\r\n                <el-col :span=\"1.5\">\r\n                    <el-button\r\n                    type=\"warning\"\r\n                    plain\r\n                    icon=\"el-icon-download\"\r\n                    size=\"mini\"\r\n                    @click=\"handleExport\"\r\n                    v-hasPermi=\"['system:user:export']\"\r\n                    >导出</el-button>\r\n                </el-col>\r\n                <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\" :columns=\"columns\"></right-toolbar>\r\n                </el-row>\r\n\r\n                <el-table v-loading=\"loading\" :data=\"userList\" @selection-change=\"handleSelectionChange\">\r\n                <el-table-column type=\"selection\" width=\"50\" align=\"center\" />\r\n                <el-table-column label=\"用户id\" align=\"center\" key=\"userId\" prop=\"userId\" v-if=\"columns[0].visible\" />\r\n                <el-table-column label=\"用户账号\" align=\"center\" key=\"userName\" prop=\"userName\" v-if=\"columns[1].visible\" :show-overflow-tooltip=\"true\" />\r\n                <el-table-column label=\"用户昵称\" align=\"center\" key=\"nickName\" prop=\"nickName\" v-if=\"columns[2].visible\" :show-overflow-tooltip=\"true\" />\r\n                <el-table-column label=\"部门\" align=\"center\" key=\"deptName\" prop=\"dept.deptName\" v-if=\"columns[3].visible\" :show-overflow-tooltip=\"true\" />\r\n                <el-table-column label=\"手机号码\" align=\"center\" key=\"phonenumber\" prop=\"phonenumber\" v-if=\"columns[4].visible\" width=\"120\" />\r\n                <el-table-column label=\"状态\" align=\"center\" key=\"status\" v-if=\"columns[5].visible\">\r\n                    <template slot-scope=\"scope\">\r\n                    <el-switch\r\n                        v-model=\"scope.row.status\"\r\n                        active-value=\"0\"\r\n                        inactive-value=\"1\"\r\n                        @change=\"handleStatusChange(scope.row)\"\r\n                    ></el-switch>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" v-if=\"columns[6].visible\" width=\"160\">\r\n                    <template slot-scope=\"scope\">\r\n                    <span>{{ parseTime(scope.row.createTime) }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"操作\"\r\n                    align=\"center\"\r\n                    width=\"160\"\r\n                    class-name=\"small-padding fixed-width\"\r\n                >\r\n                    <template slot-scope=\"scope\" v-if=\"scope.row.userId !== 1\">\r\n                    <el-button\r\n                        size=\"mini\"\r\n                        type=\"text\"\r\n                        icon=\"el-icon-edit\"\r\n                        @click=\"handleUpdate(scope.row)\"\r\n                        v-hasPermi=\"['system:user:edit']\"\r\n                    >修改</el-button>\r\n                    <el-button\r\n                        size=\"mini\"\r\n                        type=\"text\"\r\n                        icon=\"el-icon-delete\"\r\n                        @click=\"handleDelete(scope.row)\"\r\n                        v-hasPermi=\"['system:user:remove']\"\r\n                    >删除</el-button>\r\n                    <el-dropdown size=\"mini\" @command=\"(command) => handleCommand(command, scope.row)\" v-hasPermi=\"['system:user:resetPwd', 'system:user:edit']\">\r\n                        <el-button size=\"mini\" type=\"text\" icon=\"el-icon-d-arrow-right\">更多</el-button>\r\n                        <el-dropdown-menu slot=\"dropdown\">\r\n                        <el-dropdown-item command=\"handleResetPwd\" icon=\"el-icon-key\"\r\n                            v-hasPermi=\"['system:user:resetPwd']\">重置密码</el-dropdown-item>\r\n                        <el-dropdown-item command=\"handleAuthRole\" icon=\"el-icon-circle-check\"\r\n                            v-hasPermi=\"['system:user:edit']\">分配角色</el-dropdown-item>\r\n                        </el-dropdown-menu>\r\n                    </el-dropdown>\r\n                    </template>\r\n                </el-table-column>\r\n                </el-table>\r\n\r\n                <pagination\r\n                v-show=\"total>0\"\r\n                :total=\"total\"\r\n                :page.sync=\"queryParams.pageNum\"\r\n                :limit.sync=\"queryParams.pageSize\"\r\n                @pagination=\"getList\"\r\n                />\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!-- 添加或修改用户配置对话框 -->\r\n        <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"600px\" append-to-body>\r\n        <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n            <el-row>\r\n            <el-col :span=\"12\">\r\n                <el-form-item label=\"用户昵称\" prop=\"nickName\">\r\n                <el-input v-model=\"form.nickName\" placeholder=\"请输入用户昵称\" maxlength=\"30\" />\r\n                </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <el-form-item label=\"归属部门\" prop=\"deptId\">\r\n                <treeselect v-model=\"form.deptId\" :options=\"deptOptions\" :show-count=\"true\" placeholder=\"请选择归属部门\" />\r\n                </el-form-item>\r\n            </el-col>\r\n            </el-row>\r\n            <el-row>\r\n            <el-col :span=\"12\">\r\n                <el-form-item label=\"手机号码\" prop=\"phonenumber\">\r\n                <el-input v-model=\"form.phonenumber\" placeholder=\"请输入手机号码\" maxlength=\"11\" />\r\n                </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                <el-input v-model=\"form.email\" placeholder=\"请输入邮箱\" maxlength=\"50\" />\r\n                </el-form-item>\r\n            </el-col>\r\n            </el-row>\r\n            <el-row>\r\n            <el-col :span=\"12\">\r\n                <el-form-item v-if=\"form.userId == undefined\" label=\"用户名称\" prop=\"userName\">\r\n                <el-input v-model=\"form.userName\" placeholder=\"请输入用户名称\" maxlength=\"30\" />\r\n                </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <el-form-item v-if=\"form.userId == undefined\" label=\"用户密码\" prop=\"password\">\r\n                <el-input v-model=\"form.password\" placeholder=\"请输入用户密码\" type=\"password\" maxlength=\"20\" show-password/>\r\n                </el-form-item>\r\n            </el-col>\r\n            </el-row>\r\n            <el-row>\r\n            <el-col :span=\"12\">\r\n                <el-form-item label=\"用户性别\">\r\n                <el-select v-model=\"form.sex\" placeholder=\"请选择性别\">\r\n                    <el-option\r\n                    v-for=\"dict in dict.type.sys_user_sex\"\r\n                    :key=\"dict.value\"\r\n                    :label=\"dict.label\"\r\n                    :value=\"dict.value\"\r\n                    ></el-option>\r\n                </el-select>\r\n                </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <el-form-item label=\"状态\">\r\n                <el-radio-group v-model=\"form.status\">\r\n                    <el-radio\r\n                    v-for=\"dict in dict.type.sys_normal_disable\"\r\n                    :key=\"dict.value\"\r\n                    :label=\"dict.value\"\r\n                    >{{dict.label}}</el-radio>\r\n                </el-radio-group>\r\n                </el-form-item>\r\n            </el-col>\r\n            </el-row>\r\n            <el-row>\r\n            <el-col :span=\"12\">\r\n                <el-form-item label=\"岗位\">\r\n                <el-select v-model=\"form.postIds\" multiple placeholder=\"请选择岗位\">\r\n                    <el-option\r\n                    v-for=\"item in postOptions\"\r\n                    :key=\"item.postId\"\r\n                    :label=\"item.postName\"\r\n                    :value=\"item.postId\"\r\n                    :disabled=\"item.status == 1\"\r\n                    ></el-option>\r\n                </el-select>\r\n                </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <el-form-item label=\"角色\">\r\n                <el-select v-model=\"form.roleIds\" multiple placeholder=\"请选择角色\">\r\n                    <el-option\r\n                    v-for=\"item in roleOptions\"\r\n                    :key=\"item.roleId\"\r\n                    :label=\"item.roleName\"\r\n                    :value=\"item.roleId\"\r\n                    :disabled=\"item.status == 1\"\r\n                    ></el-option>\r\n                </el-select>\r\n                </el-form-item>\r\n            </el-col>\r\n            </el-row>\r\n            <el-row>\r\n            <el-col :span=\"24\">\r\n                <el-form-item label=\"备注\">\r\n                <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\"></el-input>\r\n                </el-form-item>\r\n            </el-col>\r\n            </el-row>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n            <el-button @click=\"cancel\">取 消</el-button>\r\n        </div>\r\n        </el-dialog>\r\n\r\n        <!-- 用户导入对话框 -->\r\n        <el-dialog :title=\"upload.title\" :visible.sync=\"upload.open\" width=\"400px\" append-to-body>\r\n        <el-upload\r\n            ref=\"upload\"\r\n            :limit=\"1\"\r\n            accept=\".xlsx, .xls\"\r\n            :headers=\"upload.headers\"\r\n            :action=\"upload.url + '?updateSupport=' + upload.updateSupport\"\r\n            :disabled=\"upload.isUploading\"\r\n            :on-progress=\"handleFileUploadProgress\"\r\n            :on-success=\"handleFileSuccess\"\r\n            :auto-upload=\"false\"\r\n            drag\r\n        >\r\n            <i class=\"el-icon-upload\"></i>\r\n            <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n            <div class=\"el-upload__tip text-center\" slot=\"tip\">\r\n            <div class=\"el-upload__tip\" slot=\"tip\">\r\n                <el-checkbox v-model=\"upload.updateSupport\" /> 是否更新已经存在的用户数据\r\n            </div>\r\n            <span>仅允许导入xls、xlsx格式文件。</span>\r\n            <el-link type=\"primary\" :underline=\"false\" style=\"font-size:12px;vertical-align: baseline;\" @click=\"importTemplate\">下载模板</el-link>\r\n            </div>\r\n        </el-upload>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button type=\"primary\" @click=\"submitFileForm\">确 定</el-button>\r\n            <el-button @click=\"upload.open = false\">取 消</el-button>\r\n        </div>\r\n        </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"UserDisplay\",\r\n  dicts: ['sys_normal_disable', 'sys_user_sex'],\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 用户表格数据\r\n      userList: null,\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 部门树选项\r\n      deptOptions: undefined,\r\n      // 是否显示弹出层\r\n      open: false,\r\n      // 部门名称\r\n      deptName: undefined,\r\n      // 默认密码\r\n      initPassword: undefined,\r\n      // 日期范围\r\n      dateRange: [],\r\n      // 岗位选项\r\n      postOptions: [],\r\n      // 角色选项\r\n      roleOptions: [],\r\n      // 表单参数\r\n      form: {},\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"label\"\r\n      },\r\n      // 用户导入参数\r\n      upload: {\r\n        // // 是否显示弹出层（用户导入）\r\n        // open: false,\r\n        // // 弹出层标题（用户导入）\r\n        // title: \"\",\r\n        // // 是否禁用上传\r\n        // isUploading: false,\r\n        // // 是否更新已经存在的用户数据\r\n        // updateSupport: 0,\r\n        // // 设置上传的请求头部\r\n        // headers: { Authorization: \"Bearer \" + getToken() },\r\n        // // 上传的地址\r\n        // url: process.env.VUE_APP_BASE_API + \"/system/user/importData\"\r\n      },\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        userName: undefined,\r\n        phonenumber: undefined,\r\n        status: undefined,\r\n        deptId: undefined\r\n      },\r\n      // 列信息\r\n      columns: [\r\n        { key: 0, label: `用户id`, visible: true },\r\n        { key: 1, label: `用户账号`, visible: true },\r\n        { key: 2, label: `用户名`, visible: true },\r\n      ],\r\n      // 表单校验\r\n      rules: {\r\n        // userName: [\r\n        //   { required: true, message: \"用户名称不能为空\", trigger: \"blur\" },\r\n        //   { min: 2, max: 20, message: '用户名称长度必须介于 2 和 20 之间', trigger: 'blur' }\r\n        // ],\r\n        // nickName: [\r\n        //   { required: true, message: \"用户昵称不能为空\", trigger: \"blur\" }\r\n        // ],\r\n        // password: [\r\n        //   { required: true, message: \"用户密码不能为空\", trigger: \"blur\" },\r\n        //   { min: 5, max: 20, message: '用户密码长度必须介于 5 和 20 之间', trigger: 'blur' }\r\n        // ],\r\n        // email: [\r\n        //   {\r\n        //     type: \"email\",\r\n        //     message: \"请输入正确的邮箱地址\",\r\n        //     trigger: [\"blur\", \"change\"]\r\n        //   }\r\n        // ],\r\n        // phonenumber: [\r\n        //   {\r\n        //     pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\r\n        //     message: \"请输入正确的手机号码\",\r\n        //     trigger: \"blur\"\r\n        //   }\r\n        // ]\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    // 根据名称筛选部门树\r\n    deptName(val) {\r\n      this.$refs.tree.filter(val);\r\n    }\r\n  },\r\n  created() {\r\n    this.getList();\r\n    this.getDeptTree();\r\n    this.getConfigKey(\"sys.user.initPassword\").then(response => {\r\n      this.initPassword = response.msg;\r\n    });\r\n  },\r\n  methods: {\r\n    /** 查询用户列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      listUser(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\r\n          this.userList = response.rows;\r\n          this.total = response.total;\r\n          this.loading = false;\r\n        }\r\n      );\r\n    },\r\n    /** 查询部门下拉树结构 */\r\n    getDeptTree() {\r\n      deptTreeSelect().then(response => {\r\n        this.deptOptions = response.data;\r\n      });\r\n    },\r\n    // 筛选节点\r\n    filterNode(value, data) {\r\n      if (!value) return true;\r\n      return data.label.indexOf(value) !== -1;\r\n    },\r\n    // 节点单击事件\r\n    handleNodeClick(data) {\r\n      this.queryParams.deptId = data.id;\r\n      this.handleQuery();\r\n    },\r\n    // 用户状态修改\r\n    handleStatusChange(row) {\r\n      let text = row.status === \"0\" ? \"启用\" : \"停用\";\r\n      this.$modal.confirm('确认要\"' + text + '\"\"' + row.userName + '\"用户吗？').then(function() {\r\n        return changeUserStatus(row.userId, row.status);\r\n      }).then(() => {\r\n        this.$modal.msgSuccess(text + \"成功\");\r\n      }).catch(function() {\r\n        row.status = row.status === \"0\" ? \"1\" : \"0\";\r\n      });\r\n    },\r\n    // 取消按钮\r\n    cancel() {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset() {\r\n      this.form = {\r\n        userId: undefined,\r\n        deptId: undefined,\r\n        userName: undefined,\r\n        nickName: undefined,\r\n        password: undefined,\r\n        phonenumber: undefined,\r\n        email: undefined,\r\n        sex: undefined,\r\n        status: \"0\",\r\n        remark: undefined,\r\n        postIds: [],\r\n        roleIds: []\r\n      };\r\n      this.resetForm(\"form\");\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery() {\r\n      this.dateRange = [];\r\n      this.resetForm(\"queryForm\");\r\n      this.queryParams.deptId = undefined;\r\n      this.$refs.tree.setCurrentKey(null);\r\n      this.handleQuery();\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.ids = selection.map(item => item.userId);\r\n      this.single = selection.length != 1;\r\n      this.multiple = !selection.length;\r\n    },\r\n    // 更多操作触发\r\n    handleCommand(command, row) {\r\n      switch (command) {\r\n        case \"handleResetPwd\":\r\n          this.handleResetPwd(row);\r\n          break;\r\n        case \"handleAuthRole\":\r\n          this.handleAuthRole(row);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    /** 新增按钮操作 */\r\n    handleAdd() {\r\n      this.reset();\r\n      getUser().then(response => {\r\n        this.postOptions = response.posts;\r\n        this.roleOptions = response.roles;\r\n        this.open = true;\r\n        this.title = \"添加用户\";\r\n        this.form.password = this.initPassword;\r\n      });\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate(row) {\r\n      this.reset();\r\n      const userId = row.userId || this.ids;\r\n      getUser(userId).then(response => {\r\n        this.form = response.data;\r\n        this.postOptions = response.posts;\r\n        this.roleOptions = response.roles;\r\n        this.$set(this.form, \"postIds\", response.postIds);\r\n        this.$set(this.form, \"roleIds\", response.roleIds);\r\n        this.open = true;\r\n        this.title = \"修改用户\";\r\n        this.form.password = \"\";\r\n      });\r\n    },\r\n    /** 重置密码按钮操作 */\r\n    handleResetPwd(row) {\r\n      this.$prompt('请输入\"' + row.userName + '\"的新密码', \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        closeOnClickModal: false,\r\n        inputPattern: /^.{5,20}$/,\r\n        inputErrorMessage: \"用户密码长度必须介于 5 和 20 之间\"\r\n      }).then(({ value }) => {\r\n          resetUserPwd(row.userId, value).then(response => {\r\n            this.$modal.msgSuccess(\"修改成功，新密码是：\" + value);\r\n          });\r\n        }).catch(() => {});\r\n    },\r\n    /** 分配角色操作 */\r\n    handleAuthRole: function(row) {\r\n      const userId = row.userId;\r\n      this.$router.push(\"/system/user-auth/role/\" + userId);\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm: function() {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          if (this.form.userId != undefined) {\r\n            updateUser(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"修改成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n          } else {\r\n            addUser(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"新增成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      const userIds = row.userId || this.ids;\r\n      this.$modal.confirm('是否确认删除用户编号为\"' + userIds + '\"的数据项？').then(function() {\r\n        return delUser(userIds);\r\n      }).then(() => {\r\n        this.getList();\r\n        this.$modal.msgSuccess(\"删除成功\");\r\n      }).catch(() => {});\r\n    },\r\n    /** 导出按钮操作 */\r\n    handleExport() {\r\n      this.download('system/user/export', {\r\n        ...this.queryParams\r\n      }, `user_${new Date().getTime()}.xlsx`)\r\n    },\r\n    /** 导入按钮操作 */\r\n    handleImport() {\r\n      this.upload.title = \"用户导入\";\r\n      this.upload.open = true;\r\n    },\r\n    /** 下载模板操作 */\r\n    importTemplate() {\r\n      this.download('system/user/importTemplate', {\r\n      }, `user_template_${new Date().getTime()}.xlsx`)\r\n    },\r\n    // 文件上传中处理\r\n    handleFileUploadProgress(event, file, fileList) {\r\n      this.upload.isUploading = true;\r\n    },\r\n    // 文件上传成功处理\r\n    handleFileSuccess(response, file, fileList) {\r\n      this.upload.open = false;\r\n      this.upload.isUploading = false;\r\n      this.$refs.upload.clearFiles();\r\n      this.$alert(\"<div style='overflow: auto;overflow-x: hidden;max-height: 70vh;padding: 10px 20px 0;'>\" + response.msg + \"</div>\", \"导入结果\", { dangerouslyUseHTMLString: true });\r\n      this.getList();\r\n    },\r\n    // 提交上传文件\r\n    submitFileForm() {\r\n      this.$refs.upload.submit();\r\n    }\r\n  }\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}